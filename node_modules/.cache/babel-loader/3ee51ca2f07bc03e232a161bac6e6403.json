{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Projects/MovieApp-Phase-2-Git/src/contexts/moviesContext.js\";\n\nimport React, { useEffect, createContext, useReducer } from \"react\";\nimport { getMovies } from \"../api/tmdb-api\";\nexport var MoviesContext = createContext(null);\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"add-favorite\":\n      return {\n        movies: state.movies.filter(function (m) {\n          return m.id !== action.payload.movie.id;\n        }),\n        favorites: [].concat(_toConsumableArray(state.favorites), [action.payload.movie])\n      };\n\n    case \"load-movies\":\n      return {\n        movies: _toConsumableArray(action.payload.movies),\n        favorites: []\n      };\n\n    case \"add-review\":\n      return {\n        movies: _toConsumableArray(state.movies),\n        favorites: [].concat(_toConsumableArray(state.favorites.filter(function (m) {\n          return m.id !== action.payload.movie.id;\n        })), [_objectSpread(_objectSpread({}, action.payload.movie), {}, {\n          review: action.payload.review\n        })])\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar MoviesContextProvider = function MoviesContextProvider(props) {\n  var _useReducer = useReducer(reducer, {\n    movies: [],\n    favorites: []\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var addToFavorites = function addToFavorites(movieId) {\n    var index = state.movies.map(function (m) {\n      return m.id;\n    }).indexOf(movieId);\n    dispatch({\n      type: \"add-favorite\",\n      payload: {\n        movie: state.movies[index]\n      }\n    });\n  };\n\n  var addReview = function addReview(movie, review) {\n    dispatch({\n      type: \"add-review\",\n      payload: {\n        movie,\n        review\n      }\n    });\n  };\n\n  useEffect(function () {\n    getMovies().then(function (movies) {\n      dispatch({\n        type: \"load-movies\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      favorites: state.favorites,\n      addToFavorites: addToFavorites,\n      addReview: addReview\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["/Users/apple/Projects/MovieApp-Phase-2-Git/src/contexts/moviesContext.js"],"names":["React","useEffect","createContext","useReducer","getMovies","MoviesContext","reducer","state","action","type","movies","filter","m","id","payload","movie","favorites","review","MoviesContextProvider","props","dispatch","addToFavorites","movieId","index","map","indexOf","addReview","then","children"],"mappings":"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","sourcesContent":["import React, { useEffect, createContext, useReducer } from \"react\";\r\nimport { getMovies } from \"../api/tmdb-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add-favorite\":\r\n      return {\r\n        movies: state.movies.filter((m) => m.id !== action.payload.movie.id),\r\n        favorites: [...state.favorites, action.payload.movie],\r\n      };\r\n    case \"load-movies\":\r\n      return { movies: [...action.payload.movies], favorites: [] };\r\n    case \"add-review\":\r\n      return {\r\n        movies: [...state.movies],\r\n        favorites: [\r\n          ...state.favorites.filter((m) => m.id !== action.payload.movie.id),\r\n          { ...action.payload.movie, review: action.payload.review },\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], favorites: [] });\r\n\r\n  const addToFavorites = (movieId) => {\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-favorite\", payload: { movie: state.movies[index] } });\r\n  };\r\n\r\n  const addReview = (movie, review) => {\r\n    dispatch({ type: \"add-review\", payload: { movie, review } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies().then((movies) => {\r\n      dispatch({ type: \"load-movies\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        favorites: state.favorites,\r\n        addToFavorites: addToFavorites,\r\n        addReview: addReview,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}