{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Projects/MovieApp-Phase-2-Git/src/components/templateMovieListPage/index.js\";\n\nimport React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport MovieList from \"../movieList\";\nimport FilterControls from \"../filterControls\";\n\nvar MovieListPageTemplate = function MovieListPageTemplate(_ref) {\n  var movies = _ref.movies,\n      title = _ref.title,\n      action = _ref.action;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameFilter = _useState2[0],\n      setNameFilter = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genreFilter = _useState4[0],\n      setGenreFilter = _useState4[1];\n\n  var _useState5 = useState(\"releaseDate\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderBy = _useState6[0],\n      setOrderByFilter = _useState6[1];\n\n  var _useState7 = useState(\"0\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      releaseDate = _useState8[0],\n      setReleaseDate = _useState8[1];\n\n  var _useState9 = useState(\"0\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ratings = _useState10[0],\n      setRatings = _useState10[1];\n\n  var _useState11 = useState(\"0\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      language = _useState12[0],\n      setMovieLanguage = _useState12[1];\n\n  var filterMoviesByDecade = function filterMoviesByDecade(movie) {\n    var decadeRange = releaseDate.split(\"-\");\n    return movie.release_date.split(\"-\")[0] <= decadeRange[1] && movie.release_date.split(\"-\")[0] >= decadeRange[0];\n  };\n\n  var filterMoviesByRatings = function filterMoviesByRatings(movie) {\n    return movie.vote_average >= Number(ratings);\n  };\n\n  var filterMoviesByLanguage = function filterMoviesByLanguage(movie) {\n    return movie.original_language === language;\n  };\n\n  var genre = Number(genreFilter);\n  var displayedMovies = movies.filter(function (m) {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(function (m) {\n    return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\n  }).filter(function (m) {\n    return releaseDate !== \"0\" ? filterMoviesByDecade(m) : true;\n  }).filter(function (m) {\n    return ratings !== \"0\" ? filterMoviesByRatings(m) : true;\n  }).filter(function (m) {\n    return language !== \"0\" ? filterMoviesByLanguage(m) : true;\n  }); //soting\n\n  displayedMovies.sort(function (a, b) {\n    switch (orderBy) {\n      case \"releaseDate\":\n        var dateA = new Date(a.release_date),\n            dateB = new Date(b.release_date);\n        return dateB - dateA;\n\n      case \"popularity\":\n        return b.vote_average - a.vote_average;\n\n      case \"name\":\n        var titleA = a.title.toLowerCase(),\n            titleB = b.title.toLowerCase();\n        if (titleA < titleB) return -1;\n        if (titleA > titleB) return 1;\n        return 0;\n\n      default:\n        return 0;\n    }\n  });\n\n  var handleChange = function handleChange(type, value) {\n    switch (type) {\n      case \"name\":\n        setNameFilter(value);\n        break;\n\n      case \"orderBy\":\n        setOrderByFilter(value);\n        break;\n\n      case \"releaseDate\":\n        setReleaseDate(value);\n        break;\n\n      case \"ratings\":\n        setRatings(value);\n        break;\n\n      case \"language\":\n        setMovieLanguage(value);\n        break;\n\n      default:\n        setGenreFilter(value);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: title,\n    numMovies: displayedMovies.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterControls, {\n    onUserInput: handleChange,\n    numMovies: displayedMovies.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    action: action,\n    movies: displayedMovies,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MovieListPageTemplate;","map":{"version":3,"sources":["/Users/apple/Projects/MovieApp-Phase-2-Git/src/components/templateMovieListPage/index.js"],"names":["React","useState","Header","MovieList","FilterControls","MovieListPageTemplate","movies","title","action","nameFilter","setNameFilter","genreFilter","setGenreFilter","orderBy","setOrderByFilter","releaseDate","setReleaseDate","ratings","setRatings","language","setMovieLanguage","filterMoviesByDecade","movie","decadeRange","split","release_date","filterMoviesByRatings","vote_average","Number","filterMoviesByLanguage","original_language","genre","displayedMovies","filter","m","toLowerCase","search","genre_ids","includes","sort","a","b","dateA","Date","dateB","titleA","titleB","handleChange","type","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport MovieList from \"../movieList\";\r\nimport FilterControls from \"../filterControls\";\r\n\r\nconst MovieListPageTemplate = ({ movies, title, action }) => {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const [orderBy, setOrderByFilter] = useState(\"releaseDate\");\r\n  const [releaseDate, setReleaseDate] = useState(\"0\");\r\n  const [ratings, setRatings] = useState(\"0\");\r\n  const [language, setMovieLanguage] = useState(\"0\");\r\n\r\n  const filterMoviesByDecade = (movie) => {\r\n    const decadeRange = releaseDate.split(\"-\");\r\n    return (\r\n      movie.release_date.split(\"-\")[0] <= decadeRange[1] &&\r\n      movie.release_date.split(\"-\")[0] >= decadeRange[0]\r\n    );\r\n  };\r\n\r\n  const filterMoviesByRatings = (movie) => {\r\n    return movie.vote_average >= Number(ratings);\r\n  };\r\n\r\n  const filterMoviesByLanguage = (movie) => {\r\n    return movie.original_language === language;\r\n  };\r\n\r\n  const genre = Number(genreFilter);\r\n  let displayedMovies = movies\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\r\n    })\r\n    .filter((m) => {\r\n      return releaseDate !== \"0\" ? filterMoviesByDecade(m) : true;\r\n    })\r\n    .filter((m) => {\r\n      return ratings !== \"0\" ? filterMoviesByRatings(m) : true;\r\n    })\r\n    .filter((m) => {\r\n      return language !== \"0\" ? filterMoviesByLanguage(m) : true;\r\n    });\r\n\r\n  //soting\r\n  displayedMovies.sort((a, b) => {\r\n    switch (orderBy) {\r\n      case \"releaseDate\":\r\n        const dateA = new Date(a.release_date),\r\n          dateB = new Date(b.release_date);\r\n        return dateB - dateA;\r\n      case \"popularity\":\r\n        return b.vote_average - a.vote_average;\r\n      case \"name\":\r\n        const titleA = a.title.toLowerCase(),\r\n          titleB = b.title.toLowerCase();\r\n        if (titleA < titleB) return -1;\r\n        if (titleA > titleB) return 1;\r\n        return 0;\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n  const handleChange = (type, value) => {\r\n    switch (type) {\r\n      case \"name\":\r\n        setNameFilter(value);\r\n        break;\r\n      case \"orderBy\":\r\n        setOrderByFilter(value);\r\n        break;\r\n      case \"releaseDate\":\r\n        setReleaseDate(value);\r\n        break;\r\n      case \"ratings\":\r\n        setRatings(value);\r\n        break;\r\n      case \"language\":\r\n        setMovieLanguage(value);\r\n        break;\r\n      default:\r\n        setGenreFilter(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title={title} numMovies={displayedMovies.length} />\r\n      <FilterControls\r\n        onUserInput={handleChange}\r\n        numMovies={displayedMovies.length}\r\n      />\r\n      <MovieList action={action} movies={displayedMovies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieListPageTemplate;\r\n"]},"metadata":{},"sourceType":"module"}