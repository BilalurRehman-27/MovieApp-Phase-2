{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/apple/Projects/MovieApp-Phase-2-Git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Projects/MovieApp-Phase-2-Git/src/contexts/genresContext.js\";\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { getGenres } from \"../api/tmdb-api\";\nexport var GenresContext = createContext(null);\n\nvar GenresContextProvider = function GenresContextProvider(props) {\n  var _useState = useState([{\n    id: \"0\",\n    name: \"All\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      genres = _useState2[0],\n      setGenres = _useState2[1];\n\n  useEffect(function () {\n    getGenres().then(function (allGenres) {\n      setGenres([genres[0]].concat(_toConsumableArray(allGenres)));\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(GenresContext.Provider, {\n    value: {\n      genres\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default GenresContextProvider;","map":{"version":3,"sources":["/Users/apple/Projects/MovieApp-Phase-2-Git/src/contexts/genresContext.js"],"names":["React","useState","useEffect","createContext","getGenres","GenresContext","GenresContextProvider","props","id","name","genres","setGenres","then","allGenres","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,IAAMC,aAAa,GAAGF,aAAa,CAAC,IAAD,CAAnC;;AAEP,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AAAA,kBACPN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAAD,CADD;AAAA;AAAA,MAC5BC,MAD4B;AAAA,MACpBC,SADoB;;AAEnCT,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,SAAS,GAAGQ,IAAZ,CAAiB,UAAAC,SAAS,EAAI;AAC5BF,MAAAA,SAAS,EAAED,MAAM,CAAC,CAAD,CAAR,4BAAgBG,SAAhB,GAAT;AACD,KAFD,EADc,CAIhB;AACC,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,KAAK,CAACO,QALT,CADJ;AASH,CAlBD;;AAoBA,eAAeR,qBAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport { getGenres } from \"../api/tmdb-api\";\r\n\r\nexport const GenresContext = createContext(null)\r\n\r\nconst GenresContextProvider = props => {\r\n    const [genres, setGenres] = useState([{ id: \"0\", name: \"All\" }]);\r\n    useEffect(() => {\r\n      getGenres().then(allGenres => {\r\n        setGenres([genres[0], ...allGenres]);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <GenresContext.Provider\r\n          value={{\r\n            genres\r\n          }}\r\n        >\r\n          {props.children}\r\n        </GenresContext.Provider>    \r\n    )\r\n}\r\n\r\nexport default GenresContextProvider;"]},"metadata":{},"sourceType":"module"}